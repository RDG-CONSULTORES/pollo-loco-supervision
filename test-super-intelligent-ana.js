const { Pool } = require('pg');
const TrueAgenticDirector = require('./telegram-bot/true-agentic-director');

console.log('üß†üöÄ TESTING ANA SUPER INTELIGENTE - AN√ÅLISIS COMPREHENSIVO');

const pool = new Pool({
    connectionString: 'postgresql://neondb_owner:npg_DlSRAHuyaY83@ep-orange-grass-a402u4o5-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require',
    ssl: { rejectUnauthorized: false }
});

async function testSuperIntelligentAna() {
    try {
        const director = new TrueAgenticDirector(pool);
        const testChatId = 'test_comprehensive_user';

        console.log('\nüéØ TEST 1: Consulta Multi-Dimensional Compleja (EJEMPLO DEL USUARIO)');
        const complexQuery = "Dame cuales son las Sucursales supervisadas este Trimestre de Grupo Tepeyac, cuales son sus calificaciones y cuales son sus areas de oportunidad";
        console.log('PREGUNTA:', complexQuery);
        
        console.log('\nüîç Procesando con Ana Super Inteligente...');
        const response1 = await director.processUserQuestion(complexQuery, testChatId);
        console.log('\nüìä RESPUESTA ANA:');
        console.log(response1);
        
        console.log('\n' + '='.repeat(80));
        
        console.log('\nüéØ TEST 2: Consulta de Evoluci√≥n');
        const evolutionQuery = "Como ha evolucionado TEPEYAC en los trimestres pasados, subieron o bajaron";
        console.log('PREGUNTA:', evolutionQuery);
        
        const response2 = await director.processUserQuestion(evolutionQuery, testChatId);
        console.log('\nüìà RESPUESTA EVOLUCI√ìN:');
        console.log(response2);
        
        console.log('\n' + '='.repeat(80));
        
        console.log('\nüéØ TEST 3: Comando Simple para Comparar');
        const simpleQuery = "/evolution_tepeyac";
        console.log('COMANDO:', simpleQuery);
        
        const response3 = await director.processUserQuestion(simpleQuery, testChatId);
        console.log('\nüìä RESPUESTA COMANDO:');
        console.log(response3);
        
        console.log('\n' + '='.repeat(80));
        
        console.log('\nüéØ TEST 4: Verificar Status de Inteligencia');
        const intelligenceStatus = director.getIntelligenceStatus();
        console.log('\nüß† STATUS DE ANA:');
        console.log('Nombre:', intelligenceStatus.name);
        console.log('Rol:', intelligenceStatus.role);
        console.log('Tipo de Inteligencia:', intelligenceStatus.intelligence_type);
        console.log('Conversaciones Manejadas:', intelligenceStatus.conversations_handled);
        console.log('Tasa de √âxito:', intelligenceStatus.success_rate);
        console.log('Calidad Promedio:', intelligenceStatus.average_quality);
        console.log('Insights Generados:', intelligenceStatus.insights_generated);
        console.log('Estado del Entrenamiento:', intelligenceStatus.training_complete ? '‚úÖ COMPLETADO' : '‚ùå PENDIENTE');
        
        console.log('\n‚úÖ PRUEBAS COMPLETADAS');
        console.log('\nüéØ ANA AHORA ES SUPER INTELIGENTE CON:');
        console.log('   ‚úÖ An√°lisis multi-dimensional completo');
        console.log('   ‚úÖ Evoluci√≥n trimestral con predicciones');
        console.log('   ‚úÖ Detecci√≥n autom√°tica de consultas complejas');
        console.log('   ‚úÖ Integraci√≥n LLM + Datos reales');
        console.log('   ‚úÖ Memoria conversacional inteligente');
        console.log('   ‚úÖ Capacidades de "todo lo que hab√≠amos trabajado"');
        
    } catch (error) {
        console.error('‚ùå Error en test:', error.message);
        console.error('Stack:', error.stack);
    } finally {
        await pool.end();
    }
}

testSuperIntelligentAna();